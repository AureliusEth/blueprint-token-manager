/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { PoolCreator, PoolCreatorInterface } from "../PoolCreator";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_positionManager",
        type: "address",
        internalType: "address payable",
      },
      {
        name: "_poolManager",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "createPoolAndAddLiquidity",
    inputs: [
      {
        name: "currency0",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "currency1",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "fee",
        type: "uint24",
        internalType: "uint24",
      },
      {
        name: "tickSpacing",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "hooks",
        type: "address",
        internalType: "contract IHooks",
      },
      {
        name: "sqrtPriceX96",
        type: "uint160",
        internalType: "uint160",
      },
      {
        name: "token0Amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token1Amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "tickUpper",
        type: "int24",
        internalType: "int24",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "PoolId",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "poolManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "positionManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract PositionManager",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x60c034609e57601f610eca38819003918201601f19168301916001600160401b0383118484101760a2578084926040948552833981010312609e5780516001600160a01b0381169190829003609e57602001516001600160a01b0381169190829003609e5760805260a052604051610e1390816100b7823960805181818160a601528181610445015281816105ae0152610645015260a05181605e0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe608080604052600436101561001c575b50361561001a575f80fd5b005b5f3560e01c9081634ce5b6a1146100d557508063791b98bc146100915763dc4c90d314610049575f61000f565b3461008d575f36600319011261008d576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5f80fd5b3461008d575f36600319011261008d576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b61014036600319011261008d576004356001600160a01b038116919082900361008d576024356001600160a01b038116919082900361008d5760443562ffffff811680910361008d57606435938460020b80950361008d576084356001600160a01b038116959086900361008d5760a435956001600160a01b0387169384880361008d5760c4359760e4359561010435918260020b9485840361008d5761012435918260020b9788840361008d5760a08c01968c881067ffffffffffffffff891117610580576101cf8f94978f99988f99948f95948f6101d5966040528c5260208c019c8d5260408c015260608b015260808a0152610898565b94610898565b9182856001600160a01b0380831690821611610728575b50506001600160a01b03851686116106c757505061020992610c1a565b905b61021361076e565b9760209b8c936040516102268682610734565b5f8152601f1986019485368884013760405163313b65df60e11b88820152918291610254602484018b6107a8565b60c483015260e4820160e09052610104820161026f916107eb565b03601f19810182526102819082610734565b61028a8c61080f565b526102948b61080f565b50604051600160f91b86820152600d60f81b602182015260028152986102bb60228b610734565b6102c361076e565b98604051956102d28888610734565b5f8752368888013760405197889788016102eb916107a8565b60c087015260e08601526001600160801b03166101008501526101208401526101408301525f6101608301526101808083015261032d906101a08301906107eb565b03601f198101825261033f9082610734565b6103488361080f565b526103528261080f565b5085519051604080516001600160a01b039384168b8201529290911682820152815261037f606082610734565b61038882610830565b5261039281610830565b5042603c01918242116106b3576103cd926103df6103f39360405195869463dd46508f60e01b8d8701526060602487015260848601906107eb565b84810360231901604486015290610840565b90606483015203601f198101835282610734565b6103fc83610830565b5261040682610830565b508481610636575b5050838361059f575b5061044092505f9060405180948192631592ca1b60e31b83528760048401526024830190610840565b0381347f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1801561059457610487575b60a0915020604051908152f35b3d805f843e6104968184610734565b820191838184031261008d5780519067ffffffffffffffff821161008d57019180601f8401121561008d578251906104cd82610756565b916104db6040519384610734565b808352858084019160051b8601019482861161008d57868101915b86831061050b575050505060a092505061047a565b825167ffffffffffffffff811161008d57820184603f8201121561008d57888101519167ffffffffffffffff831161058057604051610553601f8501601f19168c0182610734565b838152868b8086860101011161008d575f8b85819660408397018386015e830101528152019201916104f6565b634e487b7160e01b5f52604160045260245ffd5b6040513d5f823e3d90fd5b60405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660048201525f19602482015293849060449082905f905af190811561059457610440935f92610609575b50905083610417565b61062890863d881161062f575b6106208183610734565b810190610bc5565b5085610600565b503d610616565b60405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660048201525f19602482015291829060449082905f905af1801561059457610696575b8461040e565b6106ac90853d871161062f576106208183610734565b5084610690565b634e487b7160e01b5f52601160045260245ffd5b909290916001600160a01b03811686101561071c5782916106ec916106f29594610c1a565b93610bdd565b6001600160801b0381166001600160801b038316105f1461071557505b9061020b565b905061070f565b91505061070f92610bdd565b90955092508f806101ec565b90601f8019910116810190811067ffffffffffffffff82111761058057604052565b67ffffffffffffffff81116105805760051b60200190565b6040516060919061077f8382610734565b6002815291601f1901825f5b82811061079757505050565b80606060208093850101520161078b565b80516001600160a01b03908116835260208083015182169084015260408083015162ffffff169084015260608083015160020b9084015260809182015116910152565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b80511561081c5760200190565b634e487b7160e01b5f52603260045260245ffd5b80516001101561081c5760400190565b9080602083519182815201916020808360051b8301019401925f915b83831061086b57505050505090565b9091929394602080610889600193601f1986820301875289516107eb565b9701930193019193929061085c565b60020b908160ff1d82810118620d89e88111610bb25763ffffffff9192600182167001fffcb933bd6fad37aa2d162d1a59400102600160801b189160028116610b96575b60048116610b7a575b60088116610b5e575b60108116610b42575b60208116610b26575b60408116610b0a575b60808116610aee575b6101008116610ad2575b6102008116610ab6575b6104008116610a9a575b6108008116610a7e575b6110008116610a62575b6120008116610a46575b6140008116610a2a575b6180008116610a0e575b6201000081166109f2575b6202000081166109d7575b6204000081166109bc575b62080000166109a3575b5f1261099b575b0160201c90565b5f1904610994565b6b048a170391f7dc42444e8fa290910260801c9061098d565b6d2216e584f5fa1ea926041bedfe9890920260801c91610983565b916e5d6af8dedb81196699c329225ee6040260801c91610978565b916f09aa508b5b7a84e1c677de54f3e99bc90260801c9161096d565b916f31be135f97d08fd981231505542fcfa60260801c91610962565b916f70d869a156d2a1b890bb3df62baf32f70260801c91610958565b916fa9f746462d870fdf8a65dc1f90e061e50260801c9161094e565b916fd097f3bdfd2022b8845ad8f792aa58250260801c91610944565b916fe7159475a2c29b7443b29c7fa6e889d90260801c9161093a565b916ff3392b0822b70005940c7a398e4b70f30260801c91610930565b916ff987a7253ac413176f2b074cf7815e540260801c91610926565b916ffcbe86c7900a88aedcffc83b479aa3a40260801c9161091c565b916ffe5dee046a99a2a811c461f1969c30530260801c91610912565b916fff2ea16466c96a3843ec78b326b528610260801c91610909565b916fff973b41fa98c081472e6896dfb254c00260801c91610900565b916fffcb9843d60f6159c9db58835c9266440260801c916108f7565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c916108ee565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c916108e5565b916ffff97272373d413259a46990580e213a0260801c916108dc565b826345c3193d60e11b5f5260045260245ffd5b9081602091031261008d5751801515810361008d5790565b610c1192610c0c9290916001600160a01b0380831690821611610c14575b90036001600160a01b031690610c67565b610dba565b90565b90610bfb565b610c1192610c0c929091906001600160a01b0380821690831611610c61575b610c4f6001600160a01b03828116908416610cf1565b9190036001600160a01b031691610d3a565b90610c39565b90606082901b905f19600160601b84099282808510940393808503948584111561008d5714610cea578190600160601b900981805f03168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b5091500490565b81810291905f1982820991838084109303928084039384600160601b111561008d5714610d3157600160601b910990828211900360a01b910360601c1790565b50505060601c90565b91818302915f198185099383808610950394808603958685111561008d5714610db2579082910981805f03168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b505091500490565b906001600160801b038216809203610dce57565b6393dafdf160e01b5f5260045ffdfea264697066735822122080374f5680113efd34ab947e6d59b421ee2dba6b1588a752df3ad68a4047952c64736f6c634300081a0033";

type PoolCreatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolCreatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolCreator__factory extends ContractFactory {
  constructor(...args: PoolCreatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _positionManager: AddressLike,
    _poolManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _positionManager,
      _poolManager,
      overrides || {}
    );
  }
  override deploy(
    _positionManager: AddressLike,
    _poolManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _positionManager,
      _poolManager,
      overrides || {}
    ) as Promise<
      PoolCreator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PoolCreator__factory {
    return super.connect(runner) as PoolCreator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolCreatorInterface {
    return new Interface(_abi) as PoolCreatorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PoolCreator {
    return new Contract(address, _abi, runner) as unknown as PoolCreator;
  }
}
