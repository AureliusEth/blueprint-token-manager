/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CustomToken,
  CustomTokenInterface,
} from "../../../contracts/token_factory.sol/CustomToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimalsArg",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611fd6380380611fd6833981810160405281019061003291906106da565b808585816003908161004491906109a4565b50806004908161005491906109a4565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100c09190610a85565b60405180910390fd5b6100d88161012560201b60201c565b5082600560146101000a81548160ff021916908360ff16021790555061011b8184600a6101059190610c02565b846101109190610c4d565b6101eb60201b60201c565b5050505050610d24565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361025d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102549190610a85565b60405180910390fd5b61026f6000838361027360201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102c55780600260008282546102b99190610c8f565b92505081905550610398565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610351578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161034893929190610cd2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103e1578060026000828254039250508190555061042e565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161048b9190610d09565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104ff826104b6565b810181811067ffffffffffffffff8211171561051e5761051d6104c7565b5b80604052505050565b6000610531610498565b905061053d82826104f6565b919050565b600067ffffffffffffffff82111561055d5761055c6104c7565b5b610566826104b6565b9050602081019050919050565b60005b83811015610591578082015181840152602081019050610576565b60008484015250505050565b60006105b06105ab84610542565b610527565b9050828152602081018484840111156105cc576105cb6104b1565b5b6105d7848285610573565b509392505050565b600082601f8301126105f4576105f36104ac565b5b815161060484826020860161059d565b91505092915050565b600060ff82169050919050565b6106238161060d565b811461062e57600080fd5b50565b6000815190506106408161061a565b92915050565b6000819050919050565b61065981610646565b811461066457600080fd5b50565b60008151905061067681610650565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106a78261067c565b9050919050565b6106b78161069c565b81146106c257600080fd5b50565b6000815190506106d4816106ae565b92915050565b600080600080600060a086880312156106f6576106f56104a2565b5b600086015167ffffffffffffffff811115610714576107136104a7565b5b610720888289016105df565b955050602086015167ffffffffffffffff811115610741576107406104a7565b5b61074d888289016105df565b945050604061075e88828901610631565b935050606061076f88828901610667565b9250506080610780888289016106c5565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107df57607f821691505b6020821081036107f2576107f1610798565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261085a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261081d565b610864868361081d565b95508019841693508086168417925050509392505050565b6000819050919050565b60006108a161089c61089784610646565b61087c565b610646565b9050919050565b6000819050919050565b6108bb83610886565b6108cf6108c7826108a8565b84845461082a565b825550505050565b600090565b6108e46108d7565b6108ef8184846108b2565b505050565b5b81811015610913576109086000826108dc565b6001810190506108f5565b5050565b601f82111561095857610929816107f8565b6109328461080d565b81016020851015610941578190505b61095561094d8561080d565b8301826108f4565b50505b505050565b600082821c905092915050565b600061097b6000198460080261095d565b1980831691505092915050565b6000610994838361096a565b9150826002028217905092915050565b6109ad8261078d565b67ffffffffffffffff8111156109c6576109c56104c7565b5b6109d082546107c7565b6109db828285610917565b600060209050601f831160018114610a0e57600084156109fc578287015190505b610a068582610988565b865550610a6e565b601f198416610a1c866107f8565b60005b82811015610a4457848901518255600182019150602085019450602081019050610a1f565b86831015610a615784890151610a5d601f89168261096a565b8355505b6001600288020188555050505b505050505050565b610a7f8161069c565b82525050565b6000602082019050610a9a6000830184610a76565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610b2657808604811115610b0257610b01610aa0565b5b6001851615610b115780820291505b8081029050610b1f85610acf565b9450610ae6565b94509492505050565b600082610b3f5760019050610bfb565b81610b4d5760009050610bfb565b8160018114610b635760028114610b6d57610b9c565b6001915050610bfb565b60ff841115610b7f57610b7e610aa0565b5b8360020a915084821115610b9657610b95610aa0565b5b50610bfb565b5060208310610133831016604e8410600b8410161715610bd15782820a905083811115610bcc57610bcb610aa0565b5b610bfb565b610bde8484846001610adc565b92509050818404811115610bf557610bf4610aa0565b5b81810290505b9392505050565b6000610c0d82610646565b9150610c188361060d565b9250610c457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610b2f565b905092915050565b6000610c5882610646565b9150610c6383610646565b9250828202610c7181610646565b91508282048414831517610c8857610c87610aa0565b5b5092915050565b6000610c9a82610646565b9150610ca583610646565b9250828201905080821115610cbd57610cbc610aa0565b5b92915050565b610ccc81610646565b82525050565b6000606082019050610ce76000830186610a76565b610cf46020830185610cc3565b610d016040830184610cc3565b949350505050565b6000602082019050610d1e6000830184610cc3565b92915050565b6112a380610d336000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610239578063a9059cbb14610257578063dd62ed3e14610287578063f2fde38b146102b7576100ea565b806370a08231146101e1578063715018a6146102115780638da5cb5b1461021b576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806340c10f19146101a957806342966c68146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102d3565b6040516101049190610eca565b60405180910390f35b61012760048036038101906101229190610f85565b610365565b6040516101349190610fe0565b60405180910390f35b610145610388565b604051610152919061100a565b60405180910390f35b61017560048036038101906101709190611025565b610392565b6040516101829190610fe0565b60405180910390f35b6101936103c1565b6040516101a09190611094565b60405180910390f35b6101c360048036038101906101be9190610f85565b6103d8565b005b6101df60048036038101906101da91906110af565b6103ee565b005b6101fb60048036038101906101f691906110dc565b610402565b604051610208919061100a565b60405180910390f35b61021961044a565b005b61022361045e565b6040516102309190611118565b60405180910390f35b610241610488565b60405161024e9190610eca565b60405180910390f35b610271600480360381019061026c9190610f85565b61051a565b60405161027e9190610fe0565b60405180910390f35b6102a1600480360381019061029c9190611133565b61053d565b6040516102ae919061100a565b60405180910390f35b6102d160048036038101906102cc91906110dc565b6105c4565b005b6060600380546102e2906111a2565b80601f016020809104026020016040519081016040528092919081815260200182805461030e906111a2565b801561035b5780601f106103305761010080835404028352916020019161035b565b820191906000526020600020905b81548152906001019060200180831161033e57829003601f168201915b5050505050905090565b60008061037061064a565b905061037d818585610652565b600191505092915050565b6000600254905090565b60008061039d61064a565b90506103aa858285610664565b6103b58585856106f9565b60019150509392505050565b6000600560149054906101000a900460ff16905090565b6103e06107ed565b6103ea8282610874565b5050565b6103ff6103f961064a565b826108f6565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104526107ed565b61045c6000610978565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610497906111a2565b80601f01602080910402602001604051908101604052809291908181526020018280546104c3906111a2565b80156105105780601f106104e557610100808354040283529160200191610510565b820191906000526020600020905b8154815290600101906020018083116104f357829003601f168201915b5050505050905090565b60008061052561064a565b90506105328185856106f9565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6105cc6107ed565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361063e5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106359190611118565b60405180910390fd5b61064781610978565b50565b600033905090565b61065f8383836001610a3e565b505050565b6000610670848461053d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156106f357818110156106e3578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106da939291906111d3565b60405180910390fd5b6106f284848484036000610a3e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361076b5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107629190611118565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107dd5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107d49190611118565b60405180910390fd5b6107e8838383610c15565b505050565b6107f561064a565b73ffffffffffffffffffffffffffffffffffffffff1661081361045e565b73ffffffffffffffffffffffffffffffffffffffff16146108725761083661064a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108699190611118565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108e65760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108dd9190611118565b60405180910390fd5b6108f260008383610c15565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109685760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161095f9190611118565b60405180910390fd5b61097482600083610c15565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ab05760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610aa79190611118565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b225760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b199190611118565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610c0f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c06919061100a565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c67578060026000828254610c5b9190611239565b92505081905550610d3a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610cf3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610cea939291906111d3565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d835780600260008282540392505081905550610dd0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e2d919061100a565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e74578082015181840152602081019050610e59565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e9c82610e3a565b610ea68185610e45565b9350610eb6818560208601610e56565b610ebf81610e80565b840191505092915050565b60006020820190508181036000830152610ee48184610e91565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f1c82610ef1565b9050919050565b610f2c81610f11565b8114610f3757600080fd5b50565b600081359050610f4981610f23565b92915050565b6000819050919050565b610f6281610f4f565b8114610f6d57600080fd5b50565b600081359050610f7f81610f59565b92915050565b60008060408385031215610f9c57610f9b610eec565b5b6000610faa85828601610f3a565b9250506020610fbb85828601610f70565b9150509250929050565b60008115159050919050565b610fda81610fc5565b82525050565b6000602082019050610ff56000830184610fd1565b92915050565b61100481610f4f565b82525050565b600060208201905061101f6000830184610ffb565b92915050565b60008060006060848603121561103e5761103d610eec565b5b600061104c86828701610f3a565b935050602061105d86828701610f3a565b925050604061106e86828701610f70565b9150509250925092565b600060ff82169050919050565b61108e81611078565b82525050565b60006020820190506110a96000830184611085565b92915050565b6000602082840312156110c5576110c4610eec565b5b60006110d384828501610f70565b91505092915050565b6000602082840312156110f2576110f1610eec565b5b600061110084828501610f3a565b91505092915050565b61111281610f11565b82525050565b600060208201905061112d6000830184611109565b92915050565b6000806040838503121561114a57611149610eec565b5b600061115885828601610f3a565b925050602061116985828601610f3a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111ba57607f821691505b6020821081036111cd576111cc611173565b5b50919050565b60006060820190506111e86000830186611109565b6111f56020830185610ffb565b6112026040830184610ffb565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061124482610f4f565b915061124f83610f4f565b92508282019050808211156112675761126661120a565b5b9291505056fea26469706673582212202ce984cdcc9ba9cc96ef1a4473b37606d43fe4cc9b556e6891e6df975afb2dde64736f6c634300081c0033";

type CustomTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomToken__factory extends ContractFactory {
  constructor(...args: CustomTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    decimalsArg: BigNumberish,
    initialSupply: BigNumberish,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      decimalsArg,
      initialSupply,
      owner,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    decimalsArg: BigNumberish,
    initialSupply: BigNumberish,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      decimalsArg,
      initialSupply,
      owner,
      overrides || {}
    ) as Promise<
      CustomToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CustomToken__factory {
    return super.connect(runner) as CustomToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomTokenInterface {
    return new Interface(_abi) as CustomTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CustomToken {
    return new Contract(address, _abi, runner) as unknown as CustomToken;
  }
}
